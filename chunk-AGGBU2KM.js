import{a as V,b as me,c as ot,d as N,e as H,f as G,g as S}from"./chunk-W6IR22ZP.js";import{b as it,c as at,d as rt,e as pe,f as he}from"./chunk-AK23MYZF.js";import"./chunk-7RWCIHFI.js";import"./chunk-KQLLMZD5.js";import{b as Xe,d as te,r as $}from"./chunk-5DCULCAW.js";import{a as de,b as le}from"./chunk-BTCLMHBV.js";import{C as Ye,H as Je,M as B,O as ne,T as ce,U as se,V as et,W as tt,c as Ke,d as ie,e as Qe,h as oe,k as ae,o as Ze,q as re,xa as I,ya as A}from"./chunk-ZCK6LY7T.js";import{$ as Se,B as b,Fb as n,G as C,Ga as je,Gb as c,Hb as v,Ic as We,Jc as ee,Lb as j,Lc as P,Mb as Ve,Nb as u,Ob as w,Pb as W,Qb as X,Sb as ye,Tb as Ce,Ub as Me,V as f,X as Ae,Xb as Ne,Y as Z,Ya as $e,Yb as d,Z as Y,Zb as K,_a as s,_b as Q,a as U,ac as O,b as Pe,ba as _e,bc as F,ca as R,cc as L,db as k,ec as He,ja as Te,ka as x,kb as _,la as y,lb as J,ma as Oe,mc as Ge,n as p,na as Fe,o as l,pb as D,ra as Le,rc as E,sc as qe,ua as ve,va as Ue,vb as xe,wb as m,x as Ie,ya as ze,yb as z,zb as Be}from"./chunk-PUOMKCPY.js";var ue=class a{constructor(t){this.dialogRef=t}roleName="";roleDescription="";onCancel(){this.dialogRef.close()}onSave(){this.roleName.trim()?this.dialogRef.close({name:this.roleName.trim(),description:this.roleDescription.trim()}):alert("Role name cannot be empty")}static \u0275fac=function(e){return new(e||a)(k(V))};static \u0275cmp=_({type:a,selectors:[["app-add-role-dialog"]],decls:16,vars:3,consts:[["mat-dialog-title",""],["appearance","outline",2,"width","100%"],["matInput","","placeholder","Enter role name","required","",3,"ngModelChange","ngModel"],["appearance","outline",2,"width","100%","margin-top","16px"],["matInput","","placeholder","Enter role description","rows","3",2,"resize","none",3,"ngModelChange","ngModel"],["align","end"],["mat-button","",1,"cancel-button",3,"click"],["mat-raised-button","","color","primary",1,"save-button",3,"click","disabled"]],template:function(e,i){e&1&&(n(0,"h2",0),d(1,"New Role Addition"),c(),n(2,"mat-dialog-content")(3,"mat-form-field",1)(4,"mat-label"),d(5,"Role"),c(),n(6,"input",2),L("ngModelChange",function(r){return F(i.roleName,r)||(i.roleName=r),r}),c()(),n(7,"mat-form-field",3)(8,"mat-label"),d(9,"Description"),c(),n(10,"textarea",4),L("ngModelChange",function(r){return F(i.roleDescription,r)||(i.roleDescription=r),r}),c()()(),n(11,"mat-dialog-actions",5)(12,"button",6),u("click",function(){return i.onCancel()}),d(13,"Cancel"),c(),n(14,"button",7),u("click",function(){return i.onSave()}),d(15," Save Role "),c()()),e&2&&(s(6),O("ngModel",i.roleName),s(4),O("ngModel",i.roleDescription),s(4),m("disabled",!i.roleName.trim()))},dependencies:[P,S,N,G,H,A,I,se,ce,ne,le,de,re,ie,oe,Ze,ae],styles:[".mat-mdc-raised-button[_ngcontent-%COMP%]:disabled{border-radius:10px;padding:0 40px}.mat-mdc-raised-button[_ngcontent-%COMP%]:not(:disabled){color:#fff;background-color:#577839;border-radius:10px;padding:0 40px}.mat-mdc-raised-button[_ngcontent-%COMP%]:not(:disabled):hover{background-color:#50722f}.cancel-button[_ngcontent-%COMP%]{color:#577839!important;padding:0 30px;border-radius:10px}.cancel-button[_ngcontent-%COMP%]:hover{background-color:#fafff5!important}"]})};var be=class a{constructor(t,e){this.dialogRef=t;this.role=e}onCancel(){this.dialogRef.close(!1)}onDelete(){this.dialogRef.close(!0)}static \u0275fac=function(e){return new(e||a)(k(V),k(me))};static \u0275cmp=_({type:a,selectors:[["app-delete-confirmation-dialog"]],decls:19,vars:3,consts:[[1,"delete-dialog-container"],["mat-dialog-title",""],["mat-dialog-content",""],[1,"confirmation-message"],[1,"role-info-box"],[1,"role-details"],["alt","Role photo",1,"role-avatar",3,"src"],[1,"role-text"],[1,"role-name"],[1,"role-id"],["mat-dialog-actions","","align","end"],["mat-button","",1,"cancel-button",3,"click"],["mat-raised-button","","color","warn",3,"click"]],template:function(e,i){e&1&&(n(0,"div",0)(1,"h2",1),d(2,"Confirm Role Deletion"),c(),n(3,"div",2)(4,"p",3),d(5," Are you sure you want to delete this role? "),c(),n(6,"div",4)(7,"div",5),v(8,"img",6),n(9,"div",7)(10,"p",8),d(11),c(),n(12,"p",9),d(13),c()()()()(),n(14,"div",10)(15,"button",11),u("click",function(){return i.onCancel()}),d(16," Cancel "),c(),n(17,"button",12),u("click",function(){return i.onDelete()}),d(18,"Delete"),c()()()),e&2&&(s(8),m("src",i.role.photoUrl||"assets/images/default-role-icon.svg",$e),s(3),K(i.role.name),s(2),Q("ID: ",i.role.id,""))},dependencies:[P,S,N,G,H,A,I],styles:[".delete-dialog-container[_ngcontent-%COMP%]{padding:6px 24px}h2[_ngcontent-%COMP%]{margin-bottom:16px;color:#333}.confirmation-message[_ngcontent-%COMP%]{font-size:16px;margin-bottom:20px;color:#555}.role-info-box[_ngcontent-%COMP%]{border:1px solid #000000;border-radius:8px;padding:16px;background-color:#f0eeee;margin-bottom:16px}.role-details[_ngcontent-%COMP%]{display:flex;align-items:center}.role-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;object-fit:cover;margin-right:16px;border:1px solid #000000}.role-text[_ngcontent-%COMP%]{display:flex;flex-direction:column}.role-name[_ngcontent-%COMP%]{font-size:16px;font-weight:500;margin:0 0 4px}.role-id[_ngcontent-%COMP%]{font-size:14px;color:#666;margin:0}mat-dialog-actions[_ngcontent-%COMP%]{padding:16px 0 0;margin-bottom:0}.mat-mdc-raised-button[_ngcontent-%COMP%]:not(:disabled){color:#fff;background-color:#ec6666;border-radius:10px;padding:0 40px}.mat-mdc-raised-button[_ngcontent-%COMP%]:not(:disabled):hover{background-color:#ec4e4e}.cancel-button[_ngcontent-%COMP%]{background-color:transparent;color:#f99191!important;padding:0 30px;border-radius:10px}.cancel-button[_ngcontent-%COMP%]:hover{color:#db6b6b!important;background-color:#fee!important}"]})};var nt=(()=>{class a{static \u0275fac=function(i){return new(i||a)};static \u0275mod=J({type:a});static \u0275inj=Y({imports:[B,B]})}return a})();var kt=["mat-internal-form-field",""],_t=["*"],ct=(()=>{class a{labelPosition;static \u0275fac=function(i){return new(i||a)};static \u0275cmp=_({type:a,selectors:[["div","mat-internal-form-field",""]],hostAttrs:[1,"mdc-form-field","mat-internal-form-field"],hostVars:2,hostBindings:function(i,o){i&2&&z("mdc-form-field--align-end",o.labelPosition==="before")},inputs:{labelPosition:"labelPosition"},attrs:kt,ngContentSelectors:_t,decls:1,vars:0,template:function(i,o){i&1&&(W(),X(0))},styles:[`.mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}
`],encapsulation:2,changeDetection:0})}return a})();var vt=["input"],xt=["label"],yt=["*"],Ct=new Se("mat-checkbox-default-options",{providedIn:"root",factory:dt});function dt(){return{color:"accent",clickAction:"check-indeterminate",disabledInteractive:!1}}var g=function(a){return a[a.Init=0]="Init",a[a.Checked=1]="Checked",a[a.Unchecked=2]="Unchecked",a[a.Indeterminate=3]="Indeterminate",a}(g||{}),Mt={provide:Ke,useExisting:Ae(()=>ge),multi:!0},Ee=class{source;checked},st=dt(),ge=(()=>{class a{_elementRef=R(ze);_changeDetectorRef=R(Ge);_ngZone=R(Ue);_animationMode=R(je,{optional:!0});_options=R(Ct,{optional:!0});focus(){this._inputElement.nativeElement.focus()}_createChangeEvent(e){let i=new Ee;return i.source=this,i.checked=e,i}_getAnimationTargetElement(){return this._inputElement?.nativeElement}_animationClasses={uncheckedToChecked:"mdc-checkbox--anim-unchecked-checked",uncheckedToIndeterminate:"mdc-checkbox--anim-unchecked-indeterminate",checkedToUnchecked:"mdc-checkbox--anim-checked-unchecked",checkedToIndeterminate:"mdc-checkbox--anim-checked-indeterminate",indeterminateToChecked:"mdc-checkbox--anim-indeterminate-checked",indeterminateToUnchecked:"mdc-checkbox--anim-indeterminate-unchecked"};ariaLabel="";ariaLabelledby=null;ariaDescribedby;ariaExpanded;ariaControls;ariaOwns;_uniqueId;id;get inputId(){return`${this.id||this._uniqueId}-input`}required;labelPosition="after";name=null;change=new ve;indeterminateChange=new ve;value;disableRipple;_inputElement;_labelElement;tabIndex;color;disabledInteractive;_onTouched=()=>{};_currentAnimationClass="";_currentCheckState=g.Init;_controlValueAccessorChangeFn=()=>{};_validatorChangeFn=()=>{};constructor(){R(Ye).load(tt);let e=R(new Le("tabindex"),{optional:!0});this._options=this._options||st,this.color=this._options.color||st.color,this.tabIndex=e==null?0:parseInt(e)||0,this.id=this._uniqueId=R(Je).getId("mat-mdc-checkbox-"),this.disabledInteractive=this._options?.disabledInteractive??!1}ngOnChanges(e){e.required&&this._validatorChangeFn()}ngAfterViewInit(){this._syncIndeterminate(this._indeterminate)}get checked(){return this._checked}set checked(e){e!=this.checked&&(this._checked=e,this._changeDetectorRef.markForCheck())}_checked=!1;get disabled(){return this._disabled}set disabled(e){e!==this.disabled&&(this._disabled=e,this._changeDetectorRef.markForCheck())}_disabled=!1;get indeterminate(){return this._indeterminate}set indeterminate(e){let i=e!=this._indeterminate;this._indeterminate=e,i&&(this._indeterminate?this._transitionCheckState(g.Indeterminate):this._transitionCheckState(this.checked?g.Checked:g.Unchecked),this.indeterminateChange.emit(this._indeterminate)),this._syncIndeterminate(this._indeterminate)}_indeterminate=!1;_isRippleDisabled(){return this.disableRipple||this.disabled}_onLabelTextChange(){this._changeDetectorRef.detectChanges()}writeValue(e){this.checked=!!e}registerOnChange(e){this._controlValueAccessorChangeFn=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e}validate(e){return this.required&&e.value!==!0?{required:!0}:null}registerOnValidatorChange(e){this._validatorChangeFn=e}_transitionCheckState(e){let i=this._currentCheckState,o=this._getAnimationTargetElement();if(!(i===e||!o)&&(this._currentAnimationClass&&o.classList.remove(this._currentAnimationClass),this._currentAnimationClass=this._getAnimationClassForCheckStateTransition(i,e),this._currentCheckState=e,this._currentAnimationClass.length>0)){o.classList.add(this._currentAnimationClass);let r=this._currentAnimationClass;this._ngZone.runOutsideAngular(()=>{setTimeout(()=>{o.classList.remove(r)},1e3)})}}_emitChangeEvent(){this._controlValueAccessorChangeFn(this.checked),this.change.emit(this._createChangeEvent(this.checked)),this._inputElement&&(this._inputElement.nativeElement.checked=this.checked)}toggle(){this.checked=!this.checked,this._controlValueAccessorChangeFn(this.checked)}_handleInputClick(){let e=this._options?.clickAction;!this.disabled&&e!=="noop"?(this.indeterminate&&e!=="check"&&Promise.resolve().then(()=>{this._indeterminate=!1,this.indeterminateChange.emit(this._indeterminate)}),this._checked=!this._checked,this._transitionCheckState(this._checked?g.Checked:g.Unchecked),this._emitChangeEvent()):(this.disabled&&this.disabledInteractive||!this.disabled&&e==="noop")&&(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate)}_onInteractionEvent(e){e.stopPropagation()}_onBlur(){Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})}_getAnimationClassForCheckStateTransition(e,i){if(this._animationMode==="NoopAnimations")return"";switch(e){case g.Init:if(i===g.Checked)return this._animationClasses.uncheckedToChecked;if(i==g.Indeterminate)return this._checked?this._animationClasses.checkedToIndeterminate:this._animationClasses.uncheckedToIndeterminate;break;case g.Unchecked:return i===g.Checked?this._animationClasses.uncheckedToChecked:this._animationClasses.uncheckedToIndeterminate;case g.Checked:return i===g.Unchecked?this._animationClasses.checkedToUnchecked:this._animationClasses.checkedToIndeterminate;case g.Indeterminate:return i===g.Checked?this._animationClasses.indeterminateToChecked:this._animationClasses.indeterminateToUnchecked}return""}_syncIndeterminate(e){let i=this._inputElement;i&&(i.nativeElement.indeterminate=e)}_onInputClick(){this._handleInputClick()}_onTouchTargetClick(){this._handleInputClick(),this.disabled||this._inputElement.nativeElement.focus()}_preventBubblingFromLabel(e){e.target&&this._labelElement.nativeElement.contains(e.target)&&e.stopPropagation()}static \u0275fac=function(i){return new(i||a)};static \u0275cmp=_({type:a,selectors:[["mat-checkbox"]],viewQuery:function(i,o){if(i&1&&(ye(vt,5),ye(xt,5)),i&2){let r;Ce(r=Me())&&(o._inputElement=r.first),Ce(r=Me())&&(o._labelElement=r.first)}},hostAttrs:[1,"mat-mdc-checkbox"],hostVars:16,hostBindings:function(i,o){i&2&&(Ve("id",o.id),xe("tabindex",null)("aria-label",null)("aria-labelledby",null),Be(o.color?"mat-"+o.color:"mat-accent"),z("_mat-animation-noopable",o._animationMode==="NoopAnimations")("mdc-checkbox--disabled",o.disabled)("mat-mdc-checkbox-disabled",o.disabled)("mat-mdc-checkbox-checked",o.checked)("mat-mdc-checkbox-disabled-interactive",o.disabledInteractive))},inputs:{ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],ariaDescribedby:[0,"aria-describedby","ariaDescribedby"],ariaExpanded:[2,"aria-expanded","ariaExpanded",E],ariaControls:[0,"aria-controls","ariaControls"],ariaOwns:[0,"aria-owns","ariaOwns"],id:"id",required:[2,"required","required",E],labelPosition:"labelPosition",name:"name",value:"value",disableRipple:[2,"disableRipple","disableRipple",E],tabIndex:[2,"tabIndex","tabIndex",e=>e==null?void 0:qe(e)],color:"color",disabledInteractive:[2,"disabledInteractive","disabledInteractive",E],checked:[2,"checked","checked",E],disabled:[2,"disabled","disabled",E],indeterminate:[2,"indeterminate","indeterminate",E]},outputs:{change:"change",indeterminateChange:"indeterminateChange"},exportAs:["matCheckbox"],features:[He([Mt,{provide:Qe,useExisting:a,multi:!0}]),Te],ngContentSelectors:yt,decls:15,vars:23,consts:[["checkbox",""],["input",""],["label",""],["mat-internal-form-field","",3,"click","labelPosition"],[1,"mdc-checkbox"],[1,"mat-mdc-checkbox-touch-target",3,"click"],["type","checkbox",1,"mdc-checkbox__native-control",3,"blur","click","change","checked","indeterminate","disabled","id","required","tabIndex"],[1,"mdc-checkbox__ripple"],[1,"mdc-checkbox__background"],["focusable","false","viewBox","0 0 24 24","aria-hidden","true",1,"mdc-checkbox__checkmark"],["fill","none","d","M1.73,12.91 8.1,19.28 22.79,4.59",1,"mdc-checkbox__checkmark-path"],[1,"mdc-checkbox__mixedmark"],["mat-ripple","",1,"mat-mdc-checkbox-ripple","mat-focus-indicator",3,"matRippleTrigger","matRippleDisabled","matRippleCentered"],[1,"mdc-label",3,"for"]],template:function(i,o){if(i&1){let r=j();W(),n(0,"div",3),u("click",function(M){return x(r),y(o._preventBubblingFromLabel(M))}),n(1,"div",4,0)(3,"div",5),u("click",function(){return x(r),y(o._onTouchTargetClick())}),c(),n(4,"input",6,1),u("blur",function(){return x(r),y(o._onBlur())})("click",function(){return x(r),y(o._onInputClick())})("change",function(M){return x(r),y(o._onInteractionEvent(M))}),c(),v(6,"div",7),n(7,"div",8),Oe(),n(8,"svg",9),v(9,"path",10),c(),Fe(),v(10,"div",11),c(),v(11,"div",12),c(),n(12,"label",13,2),X(14),c()()}if(i&2){let r=Ne(2);m("labelPosition",o.labelPosition),s(4),z("mdc-checkbox--selected",o.checked),m("checked",o.checked)("indeterminate",o.indeterminate)("disabled",o.disabled&&!o.disabledInteractive)("id",o.inputId)("required",o.required)("tabIndex",o.disabled&&!o.disabledInteractive?-1:o.tabIndex),xe("aria-label",o.ariaLabel||null)("aria-labelledby",o.ariaLabelledby)("aria-describedby",o.ariaDescribedby)("aria-checked",o.indeterminate?"mixed":null)("aria-controls",o.ariaControls)("aria-disabled",o.disabled&&o.disabledInteractive?!0:null)("aria-expanded",o.ariaExpanded)("aria-owns",o.ariaOwns)("name",o.name)("value",o.value),s(7),m("matRippleTrigger",r)("matRippleDisabled",o.disableRipple||o.disabled)("matRippleCentered",!0),s(),m("for",o.inputId)}},dependencies:[et,ct],styles:[`.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:""}
`],encapsulation:2,changeDetection:0})}return a})();var lt=(()=>{class a{static \u0275fac=function(i){return new(i||a)};static \u0275mod=J({type:a});static \u0275inj=Y({imports:[ge,B,B]})}return a})();var fe=class a{mockRoles=[{id:1,name:"Admin",description:"Administrador del sistema",photoUrl:"assets/images/roles/admin.png"},{id:2,name:"Professor",description:"Profesor de cursos",photoUrl:"assets/images/roles/professor.png"},{id:3,name:"Student",description:"Estudiante registrado",photoUrl:"assets/images/roles/student.png"},{id:4,name:"Delegado",description:"Representante de grupo",photoUrl:"assets/images/roles/delegado.png"},{id:5,name:"Tutor",description:"Tutor acad\xE9mico",photoUrl:"assets/images/roles/tutor.png"}];rolePermissions={1:["view_users","create_users","edit_users","delete_users","view_courses","create_courses","edit_courses","delete_courses","view_reports","create_reports","export_reports"],2:["view_users","view_courses","create_courses","edit_courses","view_reports","create_reports","export_reports"],3:["view_courses","view_reports"],4:["view_users","view_courses","create_reports","view_reports"],5:["view_users","view_courses","edit_courses","view_reports"]};constructor(){}getRoles(){return p([...this.mockRoles]).pipe(C(800))}getRoleById(t){let e=this.mockRoles.find(i=>i.id===t);return e?p(U({},e)).pipe(C(500)):p({}).pipe(C(500))}createRole(t){let e=Pe(U({},t),{id:this.generateId()});return this.mockRoles.push(e),p(U({},e)).pipe(C(800))}updateRole(t){let e=this.mockRoles.findIndex(i=>i.id===t.id);return e!==-1?(this.mockRoles[e]=U({},t),p(U({},t)).pipe(C(800))):p({}).pipe(C(500))}deleteRole(t){let e=this.mockRoles.findIndex(i=>i.id===t);return e!==-1?(this.mockRoles.splice(e,1),p(!0).pipe(C(800))):p(!1).pipe(C(500))}getRolePermissions(t){let e=this.rolePermissions[t]||[];return p([...e]).pipe(C(800))}updateRolePermissions(t,e){return this.rolePermissions[t]=[...e],p(!0).pipe(C(800))}generateId(){return Math.max(...this.mockRoles.map(e=>e.id))+1}static \u0275fac=function(e){return new(e||a)};static \u0275prov=Z({token:a,factory:a.\u0275fac,providedIn:"root"})};var q=class a{constructor(t,e){this.http=t;this.mockService=e;this.baseUrl=$.apiUrl,this.useMockData=$.useMockData,console.log(`RolesService initialized with ${this.useMockData?"MOCK":"REAL"} data source`)}baseUrl;useMockData;getAuthHeaders(){let t=localStorage.getItem("token");return t?new Xe({"Content-Type":"application/json",Authorization:`Bearer ${t}`}):null}getRoles(){if(this.useMockData)return console.log("Using mock data for getRoles()"),this.mockService.getRoles();let t=this.getAuthHeaders();return t?this.http.get(`${this.baseUrl}/roles`,{headers:t}).pipe(f(e=>console.log("Roles fetched:",e)),b(this.handleError("getRoles",[]))):l(()=>new Error("Authentication token not found."))}getRoleById(t){if(!t||t<=0)return console.error("Invalid role ID provided:",t),l(()=>new Error(`Invalid role ID: ${t}`));if(this.useMockData)return this.mockService.getRoleById(t);let e=this.getAuthHeaders();if(!e)return console.error("No authentication headers available"),l(()=>new Error("Authentication token not found."));console.log("Calling getRoleById with headers:",e);let i=`${this.baseUrl}/roles/${t}?id=${t}`;return console.log("Making API call to:",i),console.log("Headers:",e),this.http.get(i,{headers:e}).pipe(f(o=>{console.log("Role fetched successfully:",o)}),b(o=>l(()=>o)))}createRole(t){if(this.useMockData)return this.mockService.createRole(t);let e=this.getAuthHeaders();if(!e)return l(()=>new Error("Authentication token not found."));let i=new URLSearchParams({id:"0",name:t.name,description:t.description}),o=`${this.baseUrl}/roles?${i.toString()}`;return this.http.put(o,null,{headers:e}).pipe(f(r=>console.log("Role created:",r)),b(r=>(console.error("Error creating role:",r),l(()=>r))))}updateRole(t){if(console.log("Updating role:",t),this.useMockData)return this.mockService.updateRole(t);let e=this.getAuthHeaders();return e?this.http.put(`${this.baseUrl}/roles/${t.id}`,t,{headers:e}).pipe(f(i=>console.log(`Role updated with id = ${t.id}`)),b(i=>(console.error("Error updating role:",i),l(()=>i)))):l(()=>new Error("Authentication token not found."))}deleteRole(t){if(console.log("Deleting role with ID:",t),this.useMockData)return this.mockService.deleteRole(t);let e=this.getAuthHeaders();if(!e)return l(()=>new Error("Authentication token not found."));let i=`${this.baseUrl}/roles/${t}?id=${t}`;return console.log("DELETE URL:",i),this.http.delete(i,{headers:e}).pipe(f(o=>console.log(`Role deleted with id=${t}`)),b(o=>(console.error("Error deleting role:",o),l(()=>o))))}getAllPermissions(){if(console.log("Getting all permissions"),this.useMockData)return p([{id:1,name:"READ",description:"Permiso de lectura"},{id:2,name:"WRITE",description:"Permiso de escritura"}]);let t=this.getAuthHeaders();return t?this.http.get(`${this.baseUrl}/permissions`,{headers:t}).pipe(f(e=>console.log("All permissions fetched:",e)),b(e=>(console.error("Error getting all permissions:",e),l(()=>e)))):l(()=>new Error("Authentication token not found."))}getAllRolesPermissions(){if(this.useMockData)return p([{role:"Admin",permissions:["READ","WRITE","DELETE"]},{role:"User",permissions:["READ"]}]);let t=this.getAuthHeaders();return t?this.http.get(`${this.baseUrl}/roles/rolepermissions`,{headers:t}).pipe(f(e=>console.log("All roles permissions:",e)),b(e=>(console.error("Error getting all roles permissions:",e),p([])))):l(()=>new Error("Authentication token not found."))}getRolePermissions(t){if(this.useMockData)return this.mockService.getRolePermissions(t);let e=this.getAuthHeaders();return e?this.http.put(`${this.baseUrl}/roles/${t}/permissions`,null,{headers:e}).pipe(f(i=>console.log(`Permissions for role ${t}:`,i)),b(i=>(console.error(`Error getting permissions for role ${t}:`,i),l(()=>i)))):l(()=>new Error("Authentication token not found."))}assignPermissionToRole(t,e){let i=this.getAuthHeaders();if(!i)return l(()=>new Error("Authentication token not found."));let o=`${this.baseUrl}/roles/${t}/permissions/${e}`;return this.http.put(o,null,{headers:i}).pipe(f(()=>console.log(`Permission ${e} assigned to role ${t}`)),b(r=>(console.error(`Error assigning permission ${e} to role ${t}`,r),l(()=>r))))}assignMultiplePermissionsToRole(t,e){if(this.useMockData)return this.mockService.updateRolePermissions(t,e.map(h=>h.toString()));let i=this.getAuthHeaders();if(!i)return l(()=>new Error("Authentication token not found."));if(e.length===1){let h=`${this.baseUrl}/roles/${t}/permissions/${e[0]}`;return this.http.put(h,null,{headers:i}).pipe(f(()=>console.log(`Single permission ${e[0]} assigned to role ${t}`)),b(M=>(console.error(`Error assigning single permission to role ${t}`,M),l(()=>M))))}let o=e.map((h,M)=>`idp${M+1}=${h}`).join("&"),r=`${this.baseUrl}/roles/${t}/permissions/multiple?${o}`;return this.http.put(r,null,{headers:i}).pipe(f(()=>console.log(`Multiple permissions assigned to role ${t}:`,e)),b(h=>(console.error(`Error assigning multiple permissions to role ${t}`,h),l(()=>h))))}updateRolePermissions(t,e){if(console.log("updateRolePermissions is deprecated, use assignMultiplePermissionsToRole instead"),this.useMockData)return this.mockService.updateRolePermissions(t,e);let i=this.getAuthHeaders();return i?this.http.put(`${this.baseUrl}/roles/${t}/permissions`,{permissions:e},{headers:i}).pipe(f(o=>console.log(`Permissions updated for role id=${t}`)),b(o=>(console.error("Error updating role permissions:",o),l(()=>o)))):l(()=>new Error("Authentication token not found."))}setUseMockData(t){this.useMockData=t,console.log(`Switched to ${t?"MOCK":"REAL"} data source`)}testConnection(){let t=this.getAuthHeaders();return t?(console.log("Testing connection to:",`${this.baseUrl}/roles`),this.http.get(`${this.baseUrl}/roles`,{headers:t}).pipe(f(e=>console.log("Connection test successful:",e)),b(e=>(console.error("Connection test failed:",e),l(()=>e))))):l(()=>new Error("Authentication token not found."))}handleError(t="operation",e){return i=>(console.error(`${t} failed:`,i),i.status&&(console.error(`HTTP Status: ${i.status}`),console.error(`Error Message: ${i.message}`),console.error(`URL: ${i.url}`)),p(e))}static \u0275fac=function(e){return new(e||a)(_e(te),_e(fe))};static \u0275prov=Z({token:a,factory:a.\u0275fac,providedIn:"root"})};function It(a,t){a&1&&(n(0,"div",8),v(1,"mat-spinner",9),n(2,"p"),d(3,"Loading permissions..."),c()())}function At(a,t){if(a&1&&(n(0,"span",30),d(1),c()),a&2){let e=w().$implicit;s(),Q(" - ",e.description," ")}}function St(a,t){if(a&1){let e=j();n(0,"mat-checkbox",27),L("ngModelChange",function(o){let r=x(e).$implicit;return F(r.checked,o)||(r.checked=o),y(o)}),n(1,"span",28),d(2),c(),D(3,At,2,1,"span",29),c()}if(a&2){let e=t.$implicit;O("ngModel",e.checked),s(2),K(e.name),s(),m("ngIf",e.description)}}function Tt(a,t){if(a&1&&(n(0,"div",23)(1,"h4",24),d(2),c(),n(3,"div",25),D(4,St,4,3,"mat-checkbox",26),c()()),a&2){let e=t.$implicit,i=w(3);s(2),K(e.name),s(2),m("ngForOf",e.permissions)("ngForTrackBy",i.trackByPermissionId)}}function Ot(a,t){if(a&1&&(n(0,"div",21),D(1,Tt,5,3,"div",22),c()),a&2){let e=w(2);s(),m("ngForOf",e.permissionGroups)}}function Ft(a,t){a&1&&(n(0,"div",31)(1,"p"),d(2,"No permissions available"),c()())}function Lt(a,t){if(a&1){let e=j();n(0,"div",32)(1,"button",33),u("click",function(){x(e);let o=w(2);return y(o.checkAllPermissions())}),d(2," Check All "),c(),n(3,"button",34),u("click",function(){x(e);let o=w(2);return y(o.resetPermissions())}),d(4," Uncheck All "),c()()}}function Ut(a,t){if(a&1){let e=j();n(0,"div",10)(1,"div",11)(2,"mat-form-field",12)(3,"mat-label"),d(4,"Role Name"),c(),n(5,"input",13),L("ngModelChange",function(o){x(e);let r=w();return F(r.role.name,o)||(r.role.name=o),y(o)}),c()(),n(6,"mat-form-field",12)(7,"mat-label"),d(8,"Description"),c(),n(9,"textarea",14),L("ngModelChange",function(o){x(e);let r=w();return F(r.role.description,o)||(r.role.description=o),y(o)}),c()()(),v(10,"hr",15),n(11,"div",16)(12,"h3",17),d(13,"Permissions"),c(),D(14,Ot,2,1,"div",18)(15,Ft,3,0,"div",19)(16,Lt,5,0,"div",20),c()()}if(a&2){let e=w();s(5),O("ngModel",e.role.name),s(4),O("ngModel",e.role.description),s(5),m("ngIf",e.permissionGroups.length>0),s(),m("ngIf",e.permissionGroups.length===0),s(),m("ngIf",e.permissionGroups.length>0)}}function zt(a,t){a&1&&(n(0,"span"),d(1,"Saving..."),c())}function jt(a,t){a&1&&(n(0,"span"),d(1,"Save Permissions"),c())}var ke=class a{constructor(t,e,i,o){this.dialogRef=t;this.data=e;this.rolesService=i;this.http=o;this.baseUrl=$.apiUrl,this.useMockData=$.useMockData,console.log(`RolesService initialized with ${this.useMockData?"MOCK":"REAL"} data source`)}baseUrl;useMockData;roleId;role={id:0,name:"",description:"",photoUrl:"",permissions:[]};isLoading=!0;availablePermissions=[];permissionGroups=[];ngOnInit(){this.roleId=this.data.roleId,this.loadRoleData()}loadRoleData(){this.isLoading=!0,Ie({role:this.rolesService.getRoleById(this.roleId),permissions:this.rolesService.getAllPermissions()}).subscribe({next:({role:t,permissions:e})=>{console.log("Loaded role:",t),console.log("Loaded permissions:",e),this.role=t,this.availablePermissions=e,this.createPermissionGroups(),this.loadRolePermissionsWithFallback()},error:t=>{console.error("Error loading basic data:",t),this.handleLoadError(t)}})}loadRolePermissionsWithFallback(){this.rolesService.getRolePermissions(this.roleId).pipe(b(t=>{if(console.warn("Primary getRolePermissions failed, trying fallback:",t),this.role.permissions&&this.role.permissions.length>0){console.log("Using permissions from role object");let e=this.role.permissions.map(i=>typeof i=="string"?i:i.name);return p(e)}return this.rolesService.getAllRolesPermissions().pipe(b(e=>(console.warn("Fallback getAllRolesPermissions also failed:",e),p([]))))})).subscribe({next:t=>{if(console.log("Role permissions loaded:",t),Array.isArray(t)&&t.every(e=>typeof e=="string"))this.setPermissionsFromArray(t);else if(Array.isArray(t)&&t.length>0&&typeof t[0]=="object"&&"permissions"in t[0]){let i=t.find(o=>o.role===this.role.name||o.role.toLowerCase()===this.role.name.toLowerCase());i?.permissions?this.setPermissionsFromArray(i.permissions):console.log("No permissions found for role in getAllRolesPermissions response")}else console.warn("Unexpected permissions format:",t);this.isLoading=!1},error:t=>{console.error("All permission loading methods failed:",t),this.isLoading=!1}})}createPermissionGroups(){this.permissionGroups=[{name:"Basic Permissions",permissions:this.availablePermissions.map(t=>({id:t.name,name:t.name,description:t.description,checked:!1}))}],console.log("Created permission groups:",this.permissionGroups)}resetPermissions(){this.permissionGroups.forEach(t=>{t.permissions.forEach(e=>{e.checked=!1})})}checkAllPermissions(){this.permissionGroups.forEach(t=>{t.permissions.forEach(e=>e.checked=!0)})}setPermissionsFromArray(t){if(!t||!Array.isArray(t)){console.log("No permissions array provided or invalid format");return}console.log("Setting permissions from array:",t),this.resetPermissions(),t.forEach(e=>{this.setPermission(e,!0)}),console.log("Permissions set. Current state:",this.permissionGroups)}setPermission(t,e){let i=!1;for(let o of this.permissionGroups){let r=o.permissions.find(h=>h.id===t||h.name===t);if(r){r.checked=e,console.log(`Set permission ${t} to ${e}`),i=!0;break}}i||console.warn(`Permission ${t} not found in available permissions`)}savePermissions(){if(!this.role)return;this.isLoading=!0;let t=[];this.permissionGroups.forEach(e=>{e.permissions.forEach(i=>{i.checked&&t.push(i.name)})}),console.log("Saving permissions:",t),this.rolesService.updateRole(this.role).subscribe({next:()=>{console.log("Role info updated successfully"),this.updateRolePermissionsById(t)},error:e=>{console.error("Error updating role info:",e),this.isLoading=!1,alert("Failed to update role information. Please try again.")}})}updateRolePermissionsById(t){let e=[];if(t.forEach(i=>{let o=this.availablePermissions.find(r=>r.name===i);o&&e.push(o.id)}),console.log("Permission IDs to assign:",e),e.length===0){this.isLoading=!1,this.dialogRef.close(!0);return}this.rolesService.assignMultiplePermissionsToRole(this.roleId,e).subscribe({next:()=>{console.log("All permissions updated successfully"),this.isLoading=!1,this.dialogRef.close(!0)},error:i=>{console.error("Error saving permissions:",i),this.isLoading=!1,i.status===405?alert("Permission update endpoint not available. The role information was saved, but permissions could not be updated."):alert("Failed to save permissions. Please try again.")}})}cancel(){this.dialogRef.close(!1)}trackByPermissionId(t,e){return e.id}getSelectedPermissionsCount(){let t=0;return this.permissionGroups.forEach(e=>{e.permissions.forEach(i=>{i.checked&&t++})}),t}getTotalPermissionsCount(){let t=0;return this.permissionGroups.forEach(e=>{t+=e.permissions.length}),t}handleLoadError(t){this.isLoading=!1;let e="Failed to load data. Please try again.";t.status===401?e="Authentication failed. Please log in again.":t.status===405?e="Some API endpoints are not available. Limited functionality may be available.":t.status===404?e="Role not found.":t.status===0&&(e="Network error. Please check your connection."),alert(e),this.dialogRef.close()}static \u0275fac=function(e){return new(e||a)(k(V),k(me),k(q),k(te))};static \u0275cmp=_({type:a,selectors:[["app-edit-roles-permission-dialog"]],decls:11,vars:7,consts:[[1,"dialog-container","edit-role-container"],["mat-dialog-title",""],["class","loading-container",4,"ngIf"],["mat-dialog-content","","class","role-data-container",4,"ngIf"],["mat-dialog-actions","","align","end",1,"dialog-actions"],["mat-button","","type","button",1,"cancel-button",3,"click","disabled"],["mat-raised-button","","color","primary","type","button",3,"click","disabled"],[4,"ngIf"],[1,"loading-container"],["diameter","40"],["mat-dialog-content","",1,"role-data-container"],[1,"role-info-section"],["appearance","outline",2,"width","100%","margin-bottom","16px"],["matInput","","placeholder","Enter role name",3,"ngModelChange","ngModel"],["matInput","","rows","3","placeholder","Enter role description",2,"resize","none",3,"ngModelChange","ngModel"],[2,"margin","20px 0"],[1,"permissions-section"],[2,"margin-bottom","16px","color","#1976d2"],["class","permissions-container",4,"ngIf"],["class","no-permissions",4,"ngIf"],["class","permissions-actions",4,"ngIf"],[1,"permissions-container"],["class","permission-group",4,"ngFor","ngForOf"],[1,"permission-group"],[1,"group-title"],[1,"permission-list"],["color","primary","class","permission-checkbox",3,"ngModel","ngModelChange",4,"ngFor","ngForOf","ngForTrackBy"],["color","primary",1,"permission-checkbox",3,"ngModelChange","ngModel"],[1,"permission-name"],["class","permission-description",4,"ngIf"],[1,"permission-description"],[1,"no-permissions"],[1,"permissions-actions"],["mat-stroked-button","","color","primary","type","button",3,"click"],["mat-stroked-button","","color","warn","type","button",3,"click"]],template:function(e,i){e&1&&(n(0,"div",0)(1,"h2",1),d(2),c(),D(3,It,4,0,"div",2)(4,Ut,17,5,"div",3),n(5,"div",4)(6,"button",5),u("click",function(){return i.cancel()}),d(7," Cancel "),c(),n(8,"button",6),u("click",function(){return i.savePermissions()}),D(9,zt,2,0,"span",7)(10,jt,2,0,"span",7),c()()()),e&2&&(s(2),Q("Edit Permissions for ",i.role.name||"Role",""),s(),m("ngIf",i.isLoading),s(),m("ngIf",!i.isLoading),s(2),m("disabled",i.isLoading),s(2),m("disabled",i.isLoading),s(),m("ngIf",i.isLoading),s(),m("ngIf",!i.isLoading))},dependencies:[P,We,ee,nt,A,I,lt,ge,se,ce,ne,le,de,re,ie,oe,ae,S,N,G,H,he,pe],styles:[".edit-role-container[_ngcontent-%COMP%]{padding:10px;max-width:800px;min-height:400px}.edit-role-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:20px;font-size:1.8rem;font-weight:500}.edit-role-container[_ngcontent-%COMP%]   .role-data-container[_ngcontent-%COMP%]{margin-top:24px}.edit-role-container[_ngcontent-%COMP%]   .permissions-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px;margin-bottom:24px}.edit-role-container[_ngcontent-%COMP%]   .permissions-actions[_ngcontent-%COMP%]{display:flex;gap:16px;margin-top:24px}.edit-role-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:10px;margin-top:20px}p[_ngcontent-%COMP%]{font-family:Murecho,sans-serif}.loading-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100%}mat-dialog-content[_ngcontent-%COMP%]{margin-bottom:24px}mat-dialog-actions[_ngcontent-%COMP%]{padding:16px 0;margin-bottom:0}.mat-mdc-raised-button[_ngcontent-%COMP%]:not(:disabled){color:#fff;background-color:#5884ac;border-radius:10px;padding:0 40px}.cancel-button[_ngcontent-%COMP%]{color:#5884ac!important;padding:0 20px;border-radius:10px}.cancel-button[_ngcontent-%COMP%]:hover{background-color:#f4faff!important}@media (max-width: 768px){.edit-role-container[_ngcontent-%COMP%]{padding:16px;min-height:500px}.permissions-actions[_ngcontent-%COMP%]{flex-direction:column}}"]})};function $t(a,t){a&1&&(n(0,"div",6),v(1,"mat-spinner",7),c())}var pt=class a{constructor(t,e,i){this.dialog=t;this.snackBar=e;this.rolesService=i}roles=[];displayedColumns=["nameId","description","actions"];adaptedRolesData=[];isLoading=!0;ngOnInit(){this.loadRoles()}loadRoles(){this.isLoading=!0,this.rolesService.getRoles().subscribe({next:t=>{this.roles=t,this.adaptRolesToUserData(),this.isLoading=!1},error:t=>{console.error("Error loading roles:",t),this.isLoading=!1,this.snackBar.open("Failed to load roles. Please try again later.","Close",{duration:5e3,panelClass:["error-snackbar"]})}})}adaptRolesToUserData(){this.adaptedRolesData=this.roles.map(t=>{let e="",i=`${t.name.toLowerCase()}@example.com`,o=`${t.name.toLowerCase()}.${e.toLowerCase()}`;return{id:t.id.toString(),name:t.name,lastName:e,username:o,email:i,password:"",role:"Usuario",status:"Active",photoUrl:t.photoUrl||"assets/images/default-role-icon.svg",originalRole:t}})}openAddRoleDialog(){this.dialog.open(ue,{width:"400px"}).afterClosed().subscribe(e=>{if(e?.name){this.isLoading=!0;let i={id:0,name:e.name,description:e.description||"",photoUrl:"assets/images/default-role-icon.svg"};this.rolesService.createRole(i).subscribe({next:o=>{this.loadRoles(),this.snackBar.open(`Role '${o.name}' created successfully`,"Close",{duration:3e3,panelClass:["success-snackbar"]})},error:o=>{console.error("Error creating role:",o),this.isLoading=!1,this.snackBar.open("Failed to create role. Please try again later.","Close",{duration:5e3,panelClass:["error-snackbar"]})}})}})}findOriginalRole(t){return this.roles.find(e=>e.id.toString()===t.id)}editPermissions(t){let e=this.findOriginalRole(t);e&&setTimeout(()=>{this.dialog.open(ke,{width:"800px",data:{roleId:e.id}}).afterClosed().subscribe(o=>{o&&(this.isLoading=!0,setTimeout(()=>{this.loadRoles(),this.snackBar.open(`Permissions for '${e.name}' updated successfully`,"Close",{duration:3e3,panelClass:["success-snackbar"]})},500))})},50)}deleteRole(t){let e=this.findOriginalRole(t);e&&this.dialog.open(be,{width:"400px",data:e}).afterClosed().subscribe(o=>{if(o){this.isLoading=!0;let r=e.photoUrl||"assets/images/default-role-icon.svg",h=e.name,M=e.id.toString();this.rolesService.deleteRole(e.id).subscribe({next:()=>{this.loadRoles(),this.snackBar.open(`Role '${h}' deleted successfully`,"Close",{duration:3e3,panelClass:["warning-snackbar"]})},error:ht=>{console.error("Error deleting role:",ht),this.isLoading=!1,this.snackBar.open("Failed to delete role. Please try again later.","Close",{duration:5e3,panelClass:["error-snackbar"]})}})}})}applyFilter(t){console.log("Filter applied:",t)}static \u0275fac=function(e){return new(e||a)(k(ot),k(at),k(q))};static \u0275cmp=_({type:a,selectors:[["app-roles-management"]],decls:9,vars:3,consts:[[1,"roles-management-container"],[1,"header"],["mat-raised-button","","color","primary",1,"btn-addrole",3,"click"],[1,"bi","bi-plus",2,"margin-right","8px"],["class","loading-spinner",4,"ngIf"],[3,"editUser","deleteUser","filterChange","displayedColumns","userData"],[1,"loading-spinner"],["diameter","40"]],template:function(e,i){e&1&&(n(0,"div",0)(1,"div",1)(2,"h1"),d(3,"User Roles"),c(),n(4,"button",2),u("click",function(){return i.openAddRoleDialog()}),v(5,"i",3),d(6," Add new role "),c()(),D(7,$t,2,0,"div",4),n(8,"app-users-table",5),u("editUser",function(r){return i.editPermissions(r)})("deleteUser",function(r){return i.deleteRole(r)})("filterChange",function(r){return i.applyFilter(r)}),c()()),e&2&&(s(7),m("ngIf",i.isLoading),s(),m("displayedColumns",i.displayedColumns)("userData",i.adaptedRolesData))},dependencies:[P,ee,it,A,I,S,he,pe,rt],styles:['@charset "UTF-8";html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{font-family:Murecho,sans-serif;height:100vh;margin:0;padding:0;overflow:hidden}.header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px}h1[_ngcontent-%COMP%]{margin:0;font-family:Murecho,sans-serif!important}.btn-addrole[_ngcontent-%COMP%]{color:#000!important;background-color:#70d3c3!important;border-radius:10px;border:black 1px solid;display:flex;align-items:center;padding:0 14px;line-height:1}.loading-spinner[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh}  .success-snackbar{background-color:#4caf50!important;color:#fff}  .warning-snackbar{background-color:#ff9800!important;color:#fff}  .error-snackbar{background-color:#f44336!important;color:#fff}  .mat-mdc-snack-bar-action{color:#fff!important}@media (max-width: 1023px){.header[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;gap:16px}.btn-addrole[_ngcontent-%COMP%]{width:100%;justify-content:center;font-size:14px}.loading-spinner[_ngcontent-%COMP%]{height:60vh}}@media (max-width: 767px){.header[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;gap:12px}.btn-addrole[_ngcontent-%COMP%]{width:100%;justify-content:center;font-size:13px;padding:10px 0}h1[_ngcontent-%COMP%]{font-size:24px}.loading-spinner[_ngcontent-%COMP%]{height:60vh}}']})};export{pt as RolesComponent};
