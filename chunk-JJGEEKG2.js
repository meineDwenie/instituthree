import{b as k,k as U}from"./chunk-UGN5LNS4.js";import{B as u,Y as g,ba as m,j as p,n as c,o as t,r as l}from"./chunk-RHI7NKML.js";var n={production:!1,apiUrl:"https://registerapp.up.railway.app/api",useMockData:!0};var h=class a{constructor(r,e){this.http=r;this.router=e;let s=localStorage.getItem("currentUser");s&&this.currentUserSubject.next(JSON.parse(s))}baseUrl=n.apiUrl;currentUserSubject=new p(null);mockUsers=[];mockTokens={};currentUser$=this.currentUserSubject.asObservable();get currentUserValue(){return this.currentUserSubject.value}isAuthenticated(){return!!this.currentUserValue}login(r){return n.useMockData?this.mockLogin(r):this.http.post(`${this.baseUrl}/login`,r).pipe(l(e=>(localStorage.setItem("token",e.token),localStorage.setItem("currentUser",JSON.stringify(e.user)),this.currentUserSubject.next(e.user),e.user)),u(e=>(console.error("Login error:",e),t(()=>new Error("Login failed. Please check your credentials.")))))}register(r){return n.useMockData?this.mockRegister(r):this.http.post(`${this.baseUrl}/register`,r).pipe(l(e=>(localStorage.setItem("token",e.token),localStorage.setItem("currentUser",JSON.stringify(e.user)),this.currentUserSubject.next(e.user),e.user)),u(e=>(console.error("Registration failed:",e),t(()=>new Error("Registration failed. Please try again.")))))}logout(){localStorage.removeItem("token"),localStorage.removeItem("currentUser"),this.currentUserSubject.next(null),this.router.navigate(["/authentaction"])}mockLogin(r){let e=this.mockUsers.find(i=>i.email===r.email);if(!e)return t(()=>new Error("User not found. Please register first."));if(JSON.parse(localStorage.getItem("mockPasswords")||"{}")[e.id]!==r.password)return t(()=>new Error("Invalid password."));let o=`mock-token-${Date.now()}`;return this.mockTokens[e.id]=o,localStorage.setItem("token",o),localStorage.setItem("currentUser",JSON.stringify(e)),this.currentUserSubject.next(e),c(e)}mockRegister(r){if(this.mockUsers.some(i=>i.email===r.email))return t(()=>new Error("Email already registered."));if(r.username&&this.mockUsers.some(i=>i.username===r.username))return t(()=>new Error("Email already registered."));let e={id:this.mockUsers.length+1,username:r.username||"",email:r.email,name:r.name||"",lastName:r.lastName||""},s=JSON.parse(localStorage.getItem("mockPasswords")||"{}");s[e.id]=r.password,localStorage.setItem("mockPasswords",JSON.stringify(s)),this.mockUsers.push(e),localStorage.setItem("mockUsers",JSON.stringify(this.mockUsers));let o=`mock-token-${Date.now()}`;return this.mockTokens[e.id]=o,localStorage.setItem("token",o),localStorage.setItem("currentUser",JSON.stringify(e)),this.currentUserSubject.next(e),c(e)}initMockData(){if(n.useMockData){let r=localStorage.getItem("mockUsers");r&&(this.mockUsers=JSON.parse(r))}}getToken(){return localStorage.getItem("token")}static \u0275fac=function(e){return new(e||a)(m(k),m(U))};static \u0275prov=g({token:a,factory:a.\u0275fac,providedIn:"root"})};export{n as a,h as b};
